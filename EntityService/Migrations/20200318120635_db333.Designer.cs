// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EntityService.Migrations
{
    [DbContext(typeof(CMSDBContext))]
    [Migration("20200318120635_db333")]
    partial class db333
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Banka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Banka");
                });

            modelBuilder.Entity("Brans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("KurumId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KurumId");

                    b.ToTable("Brans");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BannerImage")
                        .HasColumnType("text");

                    b.Property<string>("BannerText")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText1")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText1Link")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText2")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText2Link")
                        .HasColumnType("text");

                    b.Property<string>("ContentData")
                        .HasColumnType("text");

                    b.Property<int?>("ContentOrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("ContentPageId")
                        .HasColumnType("integer");

                    b.Property<int>("ContentPageType")
                        .HasColumnType("integer");

                    b.Property<string>("ContentShort")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsFooterMenu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsForm")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsGallery")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHamburgerMenu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHeaderMenu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsMap")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSideMenu")
                        .HasColumnType("boolean");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("KurumId")
                        .HasColumnType("integer");

                    b.Property<int>("LangId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("ResimLink")
                        .HasColumnType("text");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbImage")
                        .HasColumnType("text");

                    b.Property<string>("VideoLink")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContentPageId");

                    b.HasIndex("KurumId");

                    b.HasIndex("LangId");

                    b.HasIndex("SubeId");

                    b.ToTable("ContentPage");
                });

            modelBuilder.Entity("Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int>("DersGrupId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DersGrupId");

                    b.ToTable("Ders");
                });

            modelBuilder.Entity("DersBrans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BransId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BransId");

                    b.HasIndex("DersId");

                    b.ToTable("DersBrans");
                });

            modelBuilder.Entity("DersGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DersGrup");
                });

            modelBuilder.Entity("Derslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Derslik");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("text");

                    b.Property<int>("ContentPageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Guid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Types")
                        .HasColumnType("text");

                    b.Property<string>("data_class")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContentPageId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Formlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int?>("FormType")
                        .HasColumnType("integer");

                    b.Property<string>("Icerik")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Formlar");
                });

            modelBuilder.Entity("Hesap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<int?>("AliciKasaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int>("HesapTipId")
                        .HasColumnType("integer");

                    b.Property<int>("IlgiliKasaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OdemeTipId")
                        .HasColumnType("integer");

                    b.Property<bool>("OnayTip")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<double>("Tutar")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AliciKasaId");

                    b.HasIndex("HesapTipId");

                    b.HasIndex("IlgiliKasaId");

                    b.HasIndex("OdemeTipId");

                    b.ToTable("Hesap");
                });

            modelBuilder.Entity("HesapTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int?>("GelirGiderTipi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("HesapTip");
                });

            modelBuilder.Entity("Kasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BankaId")
                        .HasColumnType("integer");

                    b.Property<double?>("CekilenTotal")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<double?>("GelenTotal")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("KurumId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("ParaBirimId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubeId")
                        .HasColumnType("integer");

                    b.Property<double?>("Total")
                        .HasColumnType("double precision");

                    b.Property<int?>("UstKasaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.HasIndex("KurumId");

                    b.HasIndex("ParaBirimId");

                    b.HasIndex("SubeId");

                    b.HasIndex("UstKasaId");

                    b.ToTable("Kasa");
                });

            modelBuilder.Entity("Kiyafet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Beden")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("KiyafetTurId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("Stok")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KiyafetTurId");

                    b.ToTable("Kiyafet");
                });

            modelBuilder.Entity("KiyafetTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("KiyafetTur");
                });

            modelBuilder.Entity("Kurum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Facebook")
                        .HasColumnType("text");

                    b.Property<string>("GoogleAnalytic")
                        .HasColumnType("text");

                    b.Property<string>("Instagram")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Linkedin")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("Maps")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Pinterest")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<string>("TicariUnvan")
                        .HasColumnType("text");

                    b.Property<int>("TownId")
                        .HasColumnType("integer");

                    b.Property<string>("Twitter")
                        .HasColumnType("text");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("text");

                    b.Property<string>("VergiNo")
                        .HasColumnType("text");

                    b.Property<string>("Youtube")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("TownId");

                    b.ToTable("Kurum");
                });

            modelBuilder.Entity("Lang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Lang");
                });

            modelBuilder.Entity("NeredenDuydunuz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("NeredenDuydunuz");
                });

            modelBuilder.Entity("OdemeDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BankaHesapNo")
                        .HasColumnType("text");

                    b.Property<string>("BankaSubesi")
                        .HasColumnType("text");

                    b.Property<string>("Borclu")
                        .HasColumnType("text");

                    b.Property<string>("CekFazlasi")
                        .HasColumnType("text");

                    b.Property<string>("CekNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("EkBilgi")
                        .HasColumnType("text");

                    b.Property<string>("EnSonCiroEden")
                        .HasColumnType("text");

                    b.Property<int>("HesapId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("KullanilanKartTuru")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("SlipOnayKodu")
                        .HasColumnType("text");

                    b.Property<int?>("TaksitSayisi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("VadeTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("HesapId");

                    b.ToTable("OdemeDetay");
                });

            modelBuilder.Entity("OdemeTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BankaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BankaId");

                    b.ToTable("OdemeTip");
                });

            modelBuilder.Entity("OgrenciDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AileMedeniDurum")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("NeredenDuydunuzId")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<string>("OgrenciNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OkulId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("OzelHastalik")
                        .HasColumnType("text");

                    b.Property<bool?>("SinifTekrar")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NeredenDuydunuzId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("OkulId");

                    b.ToTable("OgrenciDetay");
                });

            modelBuilder.Entity("OgrenciSozlesme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int?>("DersAdedi")
                        .HasColumnType("integer");

                    b.Property<double?>("DersBirimTutar")
                        .HasColumnType("double precision");

                    b.Property<double?>("EgitimTutar")
                        .HasColumnType("double precision");

                    b.Property<string>("FaturaAd")
                        .HasColumnType("text");

                    b.Property<string>("FaturaSoyad")
                        .HasColumnType("text");

                    b.Property<int>("FinansorId")
                        .HasColumnType("integer");

                    b.Property<int?>("GorusenPersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("KurumaGetirenPersonelId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciDetayId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<double?>("PesinatTutari")
                        .HasColumnType("double precision");

                    b.Property<string>("ReferansAdSoyad")
                        .HasColumnType("text");

                    b.Property<int?>("ServisId")
                        .HasColumnType("integer");

                    b.Property<double?>("ServisTutar")
                        .HasColumnType("double precision");

                    b.Property<int>("SezonId")
                        .HasColumnType("integer");

                    b.Property<int>("SozlesmeTurId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubeId")
                        .HasColumnType("integer");

                    b.Property<int?>("TaksitAdet")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaksitBaslangic")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double?>("ToplamTutar")
                        .HasColumnType("double precision");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("text");

                    b.Property<string>("VergiNo")
                        .HasColumnType("text");

                    b.Property<double?>("YayinTutar")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("FinansorId");

                    b.HasIndex("GorusenPersonelId");

                    b.HasIndex("KurumaGetirenPersonelId");

                    b.HasIndex("OgrenciDetayId");

                    b.HasIndex("ServisId");

                    b.HasIndex("SezonId");

                    b.HasIndex("SozlesmeTurId");

                    b.HasIndex("SubeId");

                    b.ToTable("OgrenciSozlesme");
                });

            modelBuilder.Entity("OgrenciSozlesmeKiyafet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("KiyafetId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciSozlesmeId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KiyafetId");

                    b.HasIndex("OgrenciSozlesmeId");

                    b.ToTable("OgrenciSozlesmeKiyafet");
                });

            modelBuilder.Entity("OgrenciSozlesmeOdemeTablosu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciSozlesmeId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PesinatTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Tutar")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciSozlesmeId");

                    b.ToTable("OgrenciSozlesmeOdemeTablosu");
                });

            modelBuilder.Entity("OgrenciSozlesmeYayin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciSozlesmeId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("YayinId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciSozlesmeId");

                    b.HasIndex("YayinId");

                    b.ToTable("OgrenciSozlesmeYayin");
                });

            modelBuilder.Entity("Okul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OkulTipId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OkulTipId");

                    b.ToTable("Okul");
                });

            modelBuilder.Entity("OkulTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OkulTipId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OkulTip");
                });

            modelBuilder.Entity("ParaBirimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Kod")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ParaBirimi");
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("RoleParentId")
                        .HasColumnType("integer");

                    b.Property<int?>("ServiceConfigId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleParentId");

                    b.HasIndex("ServiceConfigId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Seans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Seans");
                });

            modelBuilder.Entity("ServiceConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("UrlTarget")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ServiceConfig");
                });

            modelBuilder.Entity("ServiceConfigAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsCreate")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsList")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsUpdate")
                        .HasColumnType("boolean");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceConfigId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ServiceConfigId");

                    b.HasIndex("UserId");

                    b.ToTable("ServiceConfigAuth");
                });

            modelBuilder.Entity("Servis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Guzergah")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Plaka")
                        .HasColumnType("text");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Servis");
                });

            modelBuilder.Entity("Sezon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("KurumId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KurumId");

                    b.ToTable("Sezon");
                });

            modelBuilder.Entity("Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int?>("DerslikId")
                        .HasColumnType("integer");

                    b.Property<int>("EgitimSuresi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<double>("KayitUcreti")
                        .HasColumnType("double precision");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("SeansId")
                        .HasColumnType("integer");

                    b.Property<int?>("Seviye")
                        .HasColumnType("integer");

                    b.Property<int?>("SorumluKisiId")
                        .HasColumnType("integer");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.Property<int>("ToplamDersSaati")
                        .HasColumnType("integer");

                    b.Property<int?>("Tur")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DerslikId");

                    b.HasIndex("SeansId");

                    b.HasIndex("SubeId");

                    b.ToTable("Sinif");
                });

            modelBuilder.Entity("SinifOgrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciDetayId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("SinifId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciDetayId");

                    b.HasIndex("SinifId");

                    b.HasIndex("UserId");

                    b.ToTable("SinifOgrenci");
                });

            modelBuilder.Entity("SiteConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BodyScript")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("text");

                    b.Property<string>("Facebook")
                        .HasColumnType("text");

                    b.Property<string>("FooterScript")
                        .HasColumnType("text");

                    b.Property<string>("FooterStyle")
                        .HasColumnType("text");

                    b.Property<string>("GooglePlus")
                        .HasColumnType("text");

                    b.Property<string>("HeadScript")
                        .HasColumnType("text");

                    b.Property<string>("HeadStyle")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Instagram")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("JokerPass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("MailGorunenAd")
                        .HasColumnType("text");

                    b.Property<string>("Map")
                        .HasColumnType("text");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("text");

                    b.Property<string>("SmtpMail")
                        .HasColumnType("text");

                    b.Property<string>("SmtpMailPass")
                        .HasColumnType("text");

                    b.Property<string>("SmtpPort")
                        .HasColumnType("text");

                    b.Property<bool?>("SmtpSSL")
                        .HasColumnType("boolean");

                    b.Property<string>("StartAction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StartPage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tumblr")
                        .HasColumnType("text");

                    b.Property<string>("Twitter")
                        .HasColumnType("text");

                    b.Property<string>("Youtube")
                        .HasColumnType("text");

                    b.Property<string>("layoutID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("layoutUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("layoutUrlBase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SiteConfig");
                });

            modelBuilder.Entity("Sozlesme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Metin")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Sozlesme");
                });

            modelBuilder.Entity("SozlesmeTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Kontroller")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SozlesmeTur");
                });

            modelBuilder.Entity("Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Facebook")
                        .HasColumnType("text");

                    b.Property<string>("GoogleAnalytic")
                        .HasColumnType("text");

                    b.Property<string>("Instagram")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int>("KurumId")
                        .HasColumnType("integer");

                    b.Property<string>("Linkedin")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("Maps")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Pinterest")
                        .HasColumnType("text");

                    b.Property<int?>("SozlesmeTaksitLimit")
                        .HasColumnType("integer");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<string>("TicariUnvan")
                        .HasColumnType("text");

                    b.Property<int?>("TownId")
                        .HasColumnType("integer");

                    b.Property<string>("Twitter")
                        .HasColumnType("text");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("text");

                    b.Property<string>("VergiNo")
                        .HasColumnType("text");

                    b.Property<string>("Youtube")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("KurumId");

                    b.HasIndex("TownId");

                    b.ToTable("Sube");
                });

            modelBuilder.Entity("Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("TownName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Town");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adress1")
                        .HasColumnType("text");

                    b.Property<string>("Adress2")
                        .HasColumnType("text");

                    b.Property<DateTime>("BirdhDay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Mail1")
                        .HasColumnType("text");

                    b.Property<string>("Mail2")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .HasColumnType("text");

                    b.Property<string>("Phone3")
                        .HasColumnType("text");

                    b.Property<string>("ProfilImage")
                        .HasColumnType("text");

                    b.Property<string>("SexType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tc")
                        .IsRequired()
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<int?>("TownId")
                        .HasColumnType("integer");

                    b.Property<string>("UserNo")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("TownId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("VeliDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<bool?>("Iletisim")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciDetayId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("YakinlikDerecesiId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OgrenciDetayId");

                    b.ToTable("VeliDetay");
                });

            modelBuilder.Entity("Yayin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BransId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int>("SinifSeviye")
                        .HasColumnType("integer");

                    b.Property<int>("StokAdet")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BransId");

                    b.HasIndex("DersId");

                    b.ToTable("Yayin");
                });

            modelBuilder.Entity("Brans", b =>
                {
                    b.HasOne("Kurum", "Kurum")
                        .WithMany("Brans")
                        .HasForeignKey("KurumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.HasOne("ContentPage", "Parent")
                        .WithMany("ContentPageChilds")
                        .HasForeignKey("ContentPageId");

                    b.HasOne("Kurum", "Kurum")
                        .WithMany("ContentPage")
                        .HasForeignKey("KurumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lang", "Lang")
                        .WithMany("ContentPage")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sube", "Sube")
                        .WithMany("ContentPage")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ders", b =>
                {
                    b.HasOne("DersGrup", "DersGrup")
                        .WithMany("Ders")
                        .HasForeignKey("DersGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DersBrans", b =>
                {
                    b.HasOne("Brans", "Brans")
                        .WithMany("DersBrans")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ders", "Ders")
                        .WithMany("DersBrans")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Derslik", b =>
                {
                    b.HasOne("Sube", "Sube")
                        .WithMany("Derslik")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.HasOne("ContentPage", "ContentPage")
                        .WithMany("Documents")
                        .HasForeignKey("ContentPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hesap", b =>
                {
                    b.HasOne("Kasa", "AliciKasa")
                        .WithMany("HesapAliciKasa")
                        .HasForeignKey("AliciKasaId")
                        .HasConstraintName("FK_Hesap_Kasa1");

                    b.HasOne("HesapTip", "HesapTip")
                        .WithMany("Hesap")
                        .HasForeignKey("HesapTipId")
                        .HasConstraintName("FK_Hesap_HesapTip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kasa", "IlgiliKasa")
                        .WithMany("HesapIlgiliKasa")
                        .HasForeignKey("IlgiliKasaId")
                        .HasConstraintName("FK_Hesap_Kasa")
                        .IsRequired();

                    b.HasOne("OdemeTip", "OdemeTip")
                        .WithMany("Hesap")
                        .HasForeignKey("OdemeTipId")
                        .HasConstraintName("FK_Hesap_OdemeTip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kasa", b =>
                {
                    b.HasOne("Banka", "Banka")
                        .WithMany("Kasa")
                        .HasForeignKey("BankaId")
                        .HasConstraintName("FK_Kasa_Banka")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kurum", "Kurum")
                        .WithMany("Kasa")
                        .HasForeignKey("KurumId")
                        .HasConstraintName("FK_Kasa_Kurum");

                    b.HasOne("ParaBirimi", "ParaBirim")
                        .WithMany("Kasa")
                        .HasForeignKey("ParaBirimId")
                        .HasConstraintName("FK_Kasa_ParaBirimi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sube", "Sube")
                        .WithMany("Kasa")
                        .HasForeignKey("SubeId")
                        .HasConstraintName("FK_Kasa_Sube");

                    b.HasOne("Kasa", "UstKasa")
                        .WithMany("UstKasaList")
                        .HasForeignKey("UstKasaId")
                        .HasConstraintName("FK_Kasa_Kasa");
                });

            modelBuilder.Entity("Kiyafet", b =>
                {
                    b.HasOne("KiyafetTur", "KiyafetTur")
                        .WithMany("Kiyafet")
                        .HasForeignKey("KiyafetTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kurum", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Kurum")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Town", "Town")
                        .WithMany("Kurum")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OdemeDetay", b =>
                {
                    b.HasOne("Hesap", "Hesap")
                        .WithMany("OdemeDetay")
                        .HasForeignKey("HesapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OdemeTip", b =>
                {
                    b.HasOne("Banka", "Banka")
                        .WithMany("OdemeTip")
                        .HasForeignKey("BankaId");
                });

            modelBuilder.Entity("OgrenciDetay", b =>
                {
                    b.HasOne("NeredenDuydunuz", "NeredenDuydunuz")
                        .WithMany("OgrenciDetay")
                        .HasForeignKey("NeredenDuydunuzId")
                        .HasConstraintName("FK_OgrenciDetay_NeredenDuydunuz");

                    b.HasOne("User", "Ogrenci")
                        .WithMany("OgrenciDetay")
                        .HasForeignKey("OgrenciId")
                        .HasConstraintName("FK_OgrenciDetay_Ogrenci")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Okul", "Okul")
                        .WithMany("OgrenciDetay")
                        .HasForeignKey("OkulId")
                        .HasConstraintName("FK_OgrenciDetay_Okul");
                });

            modelBuilder.Entity("OgrenciSozlesme", b =>
                {
                    b.HasOne("VeliDetay", "Finansor")
                        .WithMany("OgrenciSozlesme")
                        .HasForeignKey("FinansorId")
                        .HasConstraintName("FK_OgrenciSozlesme_VeliDetay")
                        .IsRequired();

                    b.HasOne("User", "GorusenPersonel")
                        .WithMany("OgrenciSozlesmeGorusenPersonel")
                        .HasForeignKey("GorusenPersonelId")
                        .HasConstraintName("FK_OgrenciSozlesme_Users");

                    b.HasOne("User", "KurumaGetirenPersonel")
                        .WithMany("OgrenciSozlesmeKurumaGetirenPersonel")
                        .HasForeignKey("KurumaGetirenPersonelId")
                        .HasConstraintName("FK_OgrenciSozlesme_Users1");

                    b.HasOne("OgrenciDetay", "OgrenciDetay")
                        .WithMany("OgrenciSozlesme")
                        .HasForeignKey("OgrenciDetayId")
                        .HasConstraintName("FK_OgrenciSozlesme_OgrenciDetay")
                        .IsRequired();

                    b.HasOne("Servis", "Servis")
                        .WithMany("OgrenciSozlesme")
                        .HasForeignKey("ServisId")
                        .HasConstraintName("FK_OgrenciSozlesme_Servis");

                    b.HasOne("Sezon", "Sezon")
                        .WithMany("OgrenciSozlesme")
                        .HasForeignKey("SezonId")
                        .HasConstraintName("FK_OgrenciSozlesme_Sezon")
                        .IsRequired();

                    b.HasOne("SozlesmeTur", "SozlesmeTur")
                        .WithMany("OgrenciSozlesme")
                        .HasForeignKey("SozlesmeTurId")
                        .HasConstraintName("FK_OgrenciSozlesme_SozlesmeTur")
                        .IsRequired();

                    b.HasOne("Sube", "Sube")
                        .WithMany("OgrenciSozlesme")
                        .HasForeignKey("SubeId")
                        .HasConstraintName("FK_OgrenciSozlesme_Sube");
                });

            modelBuilder.Entity("OgrenciSozlesmeKiyafet", b =>
                {
                    b.HasOne("Kiyafet", "Kiyafet")
                        .WithMany("OgrenciSozlesmeKiyafet")
                        .HasForeignKey("KiyafetId")
                        .HasConstraintName("FK_OgrenciSozlesmeKiyafet_Kiyafet")
                        .IsRequired();

                    b.HasOne("OgrenciSozlesme", "OgrenciSozlesme")
                        .WithMany("OgrenciSozlesmeKiyafet")
                        .HasForeignKey("OgrenciSozlesmeId")
                        .HasConstraintName("FK_OgrenciSozlesmeKiyafet_OgrenciSozlesme")
                        .IsRequired();
                });

            modelBuilder.Entity("OgrenciSozlesmeOdemeTablosu", b =>
                {
                    b.HasOne("OgrenciSozlesme", "OgrenciSozlesme")
                        .WithMany("OgrenciSozlesmeOdemeTablosu")
                        .HasForeignKey("OgrenciSozlesmeId")
                        .HasConstraintName("FK_OgrenciSozlesmeOdemeTablosu_OgrenciSozlesme")
                        .IsRequired();
                });

            modelBuilder.Entity("OgrenciSozlesmeYayin", b =>
                {
                    b.HasOne("OgrenciSozlesme", "OgrenciSozlesme")
                        .WithMany("OgrenciSozlesmeYayin")
                        .HasForeignKey("OgrenciSozlesmeId")
                        .HasConstraintName("FK_OgrenciSozlesmeYayin_OgrenciSozlesme")
                        .IsRequired();

                    b.HasOne("Yayin", "Yayin")
                        .WithMany("OgrenciSozlesmeYayin")
                        .HasForeignKey("YayinId")
                        .HasConstraintName("FK_OgrenciSozlesmeYayin_Yayin")
                        .IsRequired();
                });

            modelBuilder.Entity("Okul", b =>
                {
                    b.HasOne("OkulTip", "OkulTip")
                        .WithMany("Okul")
                        .HasForeignKey("OkulTipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.HasOne("Role", "RoleParent")
                        .WithMany("ParentRoles")
                        .HasForeignKey("RoleParentId");

                    b.HasOne("ServiceConfig", null)
                        .WithMany("Role")
                        .HasForeignKey("ServiceConfigId");
                });

            modelBuilder.Entity("Seans", b =>
                {
                    b.HasOne("Sube", "Sube")
                        .WithMany("Seans")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServiceConfig", b =>
                {
                    b.HasOne("ServiceConfig", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ServiceConfigAuth", b =>
                {
                    b.HasOne("Permission", "Permission")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("PermissionId");

                    b.HasOne("Role", "Role")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("RoleId");

                    b.HasOne("ServiceConfig", "ServiceConfig")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("ServiceConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Servis", b =>
                {
                    b.HasOne("Sube", "Sube")
                        .WithMany()
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sezon", b =>
                {
                    b.HasOne("Kurum", "Kurum")
                        .WithMany("Sezon")
                        .HasForeignKey("KurumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sinif", b =>
                {
                    b.HasOne("Derslik", "Derslik")
                        .WithMany("Sinif")
                        .HasForeignKey("DerslikId");

                    b.HasOne("Seans", "Seans")
                        .WithMany("Sinif")
                        .HasForeignKey("SeansId");

                    b.HasOne("Sube", "Sube")
                        .WithMany("Sinif")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SinifOgrenci", b =>
                {
                    b.HasOne("OgrenciDetay", "OgrenciDetay")
                        .WithMany("SinifOgrenci")
                        .HasForeignKey("OgrenciDetayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sinif", "Sinif")
                        .WithMany("SinifOgrenci")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", null)
                        .WithMany("SinifOgrenci")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sozlesme", b =>
                {
                    b.HasOne("Sube", "Sube")
                        .WithMany("Sozlesme")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sube", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Sube")
                        .HasForeignKey("CityId");

                    b.HasOne("Kurum", "Kurum")
                        .WithMany("Sube")
                        .HasForeignKey("KurumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Town", "Town")
                        .WithMany("Sube")
                        .HasForeignKey("TownId");
                });

            modelBuilder.Entity("Town", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Town")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Town", "Town")
                        .WithMany()
                        .HasForeignKey("TownId");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("VeliDetay", b =>
                {
                    b.HasOne("OgrenciDetay", "OgrenciDetay")
                        .WithMany("VeliDetay")
                        .HasForeignKey("OgrenciDetayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yayin", b =>
                {
                    b.HasOne("Brans", "Brans")
                        .WithMany("Yayin")
                        .HasForeignKey("BransId");

                    b.HasOne("Ders", "Ders")
                        .WithMany("Yayin")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
