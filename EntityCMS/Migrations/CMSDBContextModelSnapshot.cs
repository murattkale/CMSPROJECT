// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DynamicSiteEntity.Migrations
{
    [DbContext(typeof(CMSDBContext))]
    partial class CMSDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BannerImage")
                        .HasColumnType("text");

                    b.Property<string>("BannerText")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText1")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText1Link")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText2")
                        .HasColumnType("text");

                    b.Property<string>("ButtonText2Link")
                        .HasColumnType("text");

                    b.Property<string>("ContentData")
                        .HasColumnType("text");

                    b.Property<int>("ContentPageType")
                        .HasColumnType("integer");

                    b.Property<string>("ContentShort")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsFooterMenu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHamburgerMenu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHeaderMenu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSideMenu")
                        .HasColumnType("boolean");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ContentPage");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("text");

                    b.Property<int?>("ContentPageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<string>("Guid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Types")
                        .HasColumnType("text");

                    b.Property<string>("data_class")
                        .HasColumnType("text");

                    b.Property<int>("dataid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContentPageId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Formlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreaUser")
                        .HasColumnType("integer");

                    b.Property<int?>("FormType")
                        .HasColumnType("integer");

                    b.Property<string>("Icerik")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("LoginCount")
                        .HasColumnType("integer");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModUser")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<int?>("TownId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Formlar");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.HasOne("ContentPage", "ContentPage")
                        .WithMany("Documents")
                        .HasForeignKey("ContentPageId");
                });
#pragma warning restore 612, 618
        }
    }
}
